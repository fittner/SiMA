#https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html
#
# static Level 	ALL
#          The ALL has the lowest possible rank and is intended to turn on all logging.
#static Level 	DEBUG
#          The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
#static Level 	ERROR
#          The ERROR level designates error events that might still allow the application to continue running.
#static Level 	FATAL
#          The FATAL level designates very severe error events that will presumably lead the application to abort.
#static Level 	INFO
#          The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
#static Level 	OFF
#          The OFF has the highest possible rank and is intended to turn off logging.
#static Level 	TRACE
#          The TRACE Level designates finer-grained informational events than the DEBUG
#static int 	TRACE_INT
#          TRACE level integer value.
#static Level 	WARN
#         The WARN level designates potentially harmful situations.

# === Agent wide settings === #
# log both agents to console
log4j.logger.Agent0=WARN, Console
log4j.logger.Agent1=WARN, Console
# log both agents to separate files - can be activated together with console logger
log4j.logger.Agent0=WARN, File0
log4j.logger.Agent1=WARN, File1

# NOTE: Loggers are hierarchical, this means:
#           - the log level specified above will be overwritten by more specific settings
#           - the appenders specified above will be combined with the more specific settings (e.g. above:console & specific:file = output to console and file)

# === Specific loggers === #
# NOTE: The agent number will only be automatically appended for modules - the specific loggers need to acquire the agent id somewhere else if the want to use it
log4j.logger.sim=TRACE, SimFile
log4j.logger.Tools=TRACE
log4j.logger.Meshtools=WARN
log4j.logger.memory=TRACE
log4j.logger.planning=TRACE
log4j.logger.Test=WARN
log4j.logger.DecisionPreparation=WARN
log4j.logger.Acts=WARN
log4j.logger.SecondaryProcessFunctionality=WARN
log4j.logger.SecondaryProcessAlgorithm=ERROR
log4j.logger.SecondaryProcessDataManipulation=ERROR
log4j.logger.DataStructure=WARN
log4j.logger.ActionProcessor=INFO
log4j.logger.InternalActionProcessor = ERROR

log4j.logger.analysis=DEBUG
log4j.logger.analysis.logger=DEBUG

# === Module loggers === #
# Module F[Modulenumber]
# NOTE: Loggers are hierarchical: so, if the log level for log4j.logger.Agent0 is set to WARN, then all module loggers that are children
#                                 of this logger (e.g. log4j.logger.Agent0.F14) will inherit the level and do not need to specify it separately
#                                 same goes for appenders
log4j.logger.Agent0.F53=DEBUG
#log4j.logger.Agent0.F26=TRACE
#log4j.logger.Agent0.F52=INFO

#log4j.logger.Agent1.F14=DEBUG
#log4j.logger.Agent1.F26=INFO
#log4j.logger.Agent1.F52=INFO

#################################################################################################################################
###                                                         BASE SETTINGS                                                     ###
#################################################################################################################################

# === Root logger === #
# Note: this will turn off the logger, but still specifies a root appender which will be passed on to all other loggers
log4j.rootLogger=OFF, Console
#log4j.rootLogger=ERROR, Console

# === Socket Appender === #
log4j.appender.Socket=org.apache.log4j.net.SocketAppender
log4j.appender.Socket.remoteHost=localhost
log4j.appender.Socket.port=4445
log4j.appender.Socket.locationInfo=true

# === Console Appender === #
log4j.appender.Console=logger.JAnsiColorConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.Console.target=System.out
log4j.appender.Console.layout.ConversionPattern =[%c][%p] (%F:%L) - %m%n%throwable{n}

# === File Appender === #
log4j.appender.File0=org.apache.log4j.FileAppender
log4j.appender.File0.File=logs/Agent0.log
log4j.appender.File0.ImmediateFlush=true
log4j.appender.File0.Append=false
log4j.appender.File0.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.File0.layout.ConversionPattern =[%c][%p] (%F:%L) - %m%n%throwable{n}

log4j.appender.File1=org.apache.log4j.FileAppender
log4j.appender.File1.File=logs/Agent1.log
log4j.appender.File1.ImmediateFlush=true
log4j.appender.File1.Append=false
log4j.appender.File1.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.File1.layout.ConversionPattern =[%c][%p] (%F:%L) - %m%n%throwable{n}

log4j.appender.SimFile=org.apache.log4j.FileAppender
log4j.appender.SimFile.File=logs/sim.log
log4j.appender.SimFile.ImmediateFlush=true
log4j.appender.SimFile.Append=false
log4j.appender.SimFile.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.SimFile.layout.ConversionPattern =[%c][%p] (%F:%L) - %m%n%throwable{n}

# Not in use
log4j.appender.FullFile=org.apache.log4j.FileAppender
log4j.appender.FullFile.File=logs/full.log
log4j.appender.FullFile.ImmediateFlush=true
log4j.appender.FullFile.Append=false
log4j.appender.FullFile.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.FullFile.layout.ConversionPattern =[%c][%p] (%F:%L) - %m%n%throwable{n}